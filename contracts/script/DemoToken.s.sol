// SPDX-License-Identifier: MIT

pragma solidity 0.8.20;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                IMPORTS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

import {Script} from "forge-std/Script.sol";
import {DemoToken} from "./../src/A_ERC20/DemoToken.sol";

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                               CONTRACTS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

contract DemoTokenScript is Script {

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                            STORAGE VARIABLE
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    DemoToken public s_token;
    string public constant NAME = "DemoToken";
    string public constant SYMBOL = "DMT";
    address public s_admin = makeAddr("ADMIN");
    address public s_minter = makeAddr("MINTER");
    uint256 public constant TOKEN_AMOUNT = 100 ether;
    uint256 public constant FAUCET_AMOUNT = 10 ether;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                FUNCTIONS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    function setUp() public {

    }

    function run() public returns (DemoToken token) {
        address[] memory minters = new address[](1);
        minters[0] = s_minter;

        vm.startBroadcast();

        token = new DemoToken(NAME, SYMBOL, minters, s_admin);

        vm.stopBroadcast();
    }
}