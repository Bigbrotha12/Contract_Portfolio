// SPDX-License-Identifier: MIT

pragma solidity 0.8.20;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                IMPORTS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

import {Script} from "forge-std/Script.sol";
import {IBC_Bridge} from "./../src/C_IBC_Messenger/IBC_Bridge.sol";
import {DemoToken} from "./../src/A_ERC20/DemoToken.sol";

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                               CONTRACTS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

contract IBC_BridgeScript is Script {

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                            STORAGE VARIABLE
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    // Bridge
    IBC_Bridge public s_bridge;
    string public constant BRIDGE_NAME = "IBC_DEMO";
    string public constant BRIDGE_VERSION = "0.0.1";

    // Mock data
    address immutable i_user = makeAddr("USER");
    address immutable i_notAdmin = makeAddr("NOT_ADMIN");
    address immutable i_admin = makeAddr("ADMIN");
    address immutable i_receiver = makeAddr("RECEIVER");
    uint256 immutable i_chain = block.chainid;
    uint256 immutable i_otherChain = 1337;
    uint256 constant BRIDGE_AMOUNT = 100 ether;
    uint256 constant INITIAL_NONCE = 1;
    string constant TYPEDDATAV4_PREFIX = "\x19\x01";

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                FUNCTIONS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    function setUp() public {

    }

    function run() public returns (IBC_Bridge bridge) {
        vm.startBroadcast();

        bridge = new IBC_Bridge(BRIDGE_NAME, BRIDGE_VERSION, i_admin);

        vm.stopBroadcast();
    }
}